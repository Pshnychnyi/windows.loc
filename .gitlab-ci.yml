stages:
  - deploy

deploy:
  when: manual
  stage: deploy
  image: "php:${PHP_VERSION}-fpm-alpine"
  before_script:
    - apk add --no-cache git openssh-client lftp nodejs npm curl composer
    - apk add --no-cache php83-simplexml php83-intl php83-session php83-fileinfo php83-dom php83-tokenizer php83-xmlreader
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > /tmp/ssh_private_key
    - chmod 600 /tmp/ssh_private_key
    - ssh-add /tmp/ssh_private_key || { echo "Failed to add SSH key"; exit 1; }
  script:
    - git fetch --all
    - git diff --name-only origin/main HEAD > changed_files.txt
    - echo "Composer install..."
    - composer install --no-dev --optimize-autoloader
    - echo "NPM install..."
    - npm install
    - echo "NPM build..."
    - npm run build
    #    - lftp -e "mirror --reverse --only-newer --no-perms --ignore-time --verbose --dry-run --parallel=2 --exclude-glob storage/* --exclude-glob vendor/* --exclude-glob node_modules/* ./ $REMOTE_DIR; quit" -u $FTP_USERNAME,$FTP_PASSWORD $FTP_SERVER
    #    - lftp -e "mirror --reverse --only-newer --no-perms --ignore-time --verbose --parallel=2 --exclude-glob .git/* --exclude-glob bootstrap/cache/* --exclude-glob .gitlab-ci.yml --exclude-glob storage/* --exclude-glob vendor/* --exclude-glob node_modules/* ./ $REMOTE_DIR; quit" -u $FTP_USERNAME,$FTP_PASSWORD $FTP_SERVER
    - lftp -e "mirror --reverse --only-newer --no-perms --ignore-time --verbose --parallel=2 $IGNORED_FOLDERS ./ $REMOTE_DIR; quit" -u $FTP_USERNAME,$FTP_PASSWORD $FTP_SERVER
    - echo "Clearing old caches..."
    - rm -fR bootstrap/cache/* storage/framework/cache/data/*
    - echo "Starting deployment via URL..."
    - curl "${DEPLOY_URL}${DEPLOY_PASSWORD}"
  only:
    - main # Replace with the branch you want to deploy
